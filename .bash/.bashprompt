#!/bin/bash
# basedigit sets the major color:
if hostname --domain | grep -qF "booking.com"; then
  basedigit=4
else
  basedigit=6
fi
# root_basedigit probably should be 1 (red):
root_basedigit=1

export prompt_color=3
# inspired by http://stackoverflow.com/a/2774197
declare -A col
col=( [reset]="$(tput sgr0)" [bold]="$(tput smso)" [invred]=$'\e[41m' [red]=$'\e[31m' [green]="$(tput setaf 2)")
if [ "0" != "$UID" ]; then
  col['base']=$'\e['"3${basedigit}m"
  col['invbase']=$'\e['"4${basedigit}m"
else
  col['base']=$'\e['"3${rootbasedigit}m"
  col['invbase']=$'\e['"4${rootbasedigit}m"
fi

function set_title ()
{ # {{{
  local word_blacklist=$'vim\nbash\nhistory\nsed\nsort\ntail\necho\negrep\ngrep'
  local words="$(HISTTIMEFORMAT="" history | sed -re "s/^\s*[0-9]*\s*//"  | uniq | tail -n60 | tr " " "\n" | sort -u | egrep '^[A-Za-z0-9_.-]+$' | grep -vF "$word_blacklist" | sort -u | tr "\n" " ")"
  printf "\e]0;$USER@$HOSTNAME: $words\007"
} # }}}

function render_name ()
{ # {{{
  echo -n "\[${col['base']}\]$USER\[${col['reset']}\]"
  #echo -n "$USER"
} # }}}
function render_hostname ()
{ # {{{
  echo -n "@\[${col['base']}\]${HOSTNAME%%.*}\[${col['reset']}\]"
} # }}}
function render_time ()
{ # {{{
  echo -n " \[${col['base']}\]$(date +%H:%M)\[${col['reset']}\]"
} # }}}
function render_pwd ()
{ # {{{
  echo -n " \[${col['base']}\]$(pwd | sed -e "s|$HOME|~|")\[${col['reset']}\]"
} # }}}
function render_low_battery_when_discharging ()
{ # {{{
  which acpi >& /dev/null || return
  time_remaining="$(acpi | sed -nre "s/.* 0?([0-9]*:[0-9]{2})[0-9:]* remaining$/\1/;tp;b;:p p")"
  if grep "^0:[1234][0-9]+" <<< "$time_remaining" ; then
    echo -n " \[${col['invred']}\]${time_remaining//:/h}m left\[${col['reset']}\] "
  fi
} # }}}

function render_retval ()
{ # {{{
  if [ "$last_dollar_questionmark" != 0 ]; then
    echo -en ' \[\e[31;1m'
  else
    echo -en ' \[\e[32;1m'
  fi
  echo '\]\$\[\e[0m\] '
} # }}}

# Put more into here, if needed. May output newlines etc if so called for.
declare last_dollar_questionmark=0
declare -a functions_to_call_pre_prompt=( set_title )
#declare -a functions_to_render_prompt=( render_name render_time render_pwd render_retval )
declare -a functions_to_render_prompt=( render_name render_hostname render_time render_pwd render_low_battery_when_discharging render_retval )

function skrewz_prompt_command ()
{ # {{{
  for functionname in "${functions_to_call_pre_prompt[@]}"; do
    $functionname
  done
  export PS1="$(skrewz_prompt_rendering_command)"
  #echo >&2
  #echo "PS1 is now (as rendered) \"$PS1\"" >&2
  #echo "PS1 is now (cat -A'ed)   \"$(cat -A <<< "$PS1")\"" >&2
  #echo "PS1 is now   (xxd'ed):   \"$(xxd <<< "$PS1")\"" >&2
  #echo >&2
} # }}}
function skrewz_prompt_rendering_command ()
{ # {{{
  PS1=''
  for functionname in "${functions_to_render_prompt[@]}"; do
    $functionname
  done
  #echo >&2
  ##echo "PS1 is now (as rendered) \"$PS1\"" >&2
  #echo "PS1 is now (cat -A'ed)   \"$(cat -A <<< "$PS1")\"" >&2
  ##echo "PS1 is now   (xxd'ed):   \"$(xxd <<< "$PS1")\"" >&2
  #echo >&2
} # }}}
export -f set_title skrewz_prompt_command skrewz_prompt_rendering_command

# These together render the prompt. The PS1 has to be used 
export PROMPT_COMMAND="last_dollar_questionmark=$?; skrewz_prompt_command"

# vim: fdm=marker fml=1
