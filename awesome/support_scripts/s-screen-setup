#!/bin/bash

xset r rate 400 60 &
xset m 5 1 &
setxkbmap skrewz-dvorak

function get_output_for_edid_line ()
{
    xrandroutput="$(cat)"
    if [ "1" != "$(echo "$xrandroutput" | grep -c "$1")" ]; then
        #echo "Not unique: $1, aborting:" >&2
        echo "$xrandroutput" | grep "$1" >&2
        exit 1
    fi
    echo "$xrandroutput" | grep -B 999 "$1" | grep "connected" | tail -1 | grep -Eo "^[^ ]+"
}

xrandroutput="$(xrandr --verbose)"
declare -A display
display['pos_0_screen_0']="$(echo "$xrandroutput" | get_output_for_edid_line "4720446973706c61790a2020000000fe")"
display['pos_0_lid_state']='.*'

display['pos_1_screen_left']="$(echo "$xrandroutput" | get_output_for_edid_line "4720446973706c61790a2020000000fe")"
display['pos_1_screen_middle']="$(echo "$xrandroutput" | get_output_for_edid_line "552100001e4d6c80a070703e8030203a")"
display['pos_1_lid_state']='^state:.*open$'

display['pos_2_screen_left']="$(echo "$xrandroutput" | get_output_for_edid_line "4720446973706c61790a2020000000fe")"
display['pos_2_screen_middle']="$(echo "$xrandroutput" | get_output_for_edid_line "552100001e4d6c80a070703e8030203a")"
display['pos_2_lid_state']='^state:.*closed$'

display['pos_3_screen_bottom']="$(echo "$xrandroutput" | get_output_for_edid_line "4720446973706c61790a2020000000fe")"
display['pos_3_screen_top']="$(echo "$xrandroutput" | get_output_for_edid_line "846300001e8c0ad08a20e02d10103e96")"



disconnected_but_used_displays="$(sed -nre 's/^([^ ]+) disconnected [0-9]+x[0-9]+[+][0-9]+[+][0-9]+ .*$/\1/;T;p' <<< "$xrandroutput")"


if [ -n "${display['pos_3_screen_bottom']:-}" ] &&
   [ -n "${display['pos_3_screen_top']:-}" ]; then
  notify-send -u "low" -t 2000 "Considering this position 3"
  sleep 1
  xrandr --output "${display['pos_3_screen_top']:-}"    --mode 1920x1080 --crtc 0 --pos 0x0 --rotate normal \
         --output "${display['pos_3_screen_bottom']:-}" --mode 2560x1440 --crtc 1 --pos 0x1080 --rotate normal

elif [ -n "${display['pos_1_screen_left']:-}" ] &&
     [ -n "${display['pos_1_screen_middle']:-}" ] &&
     grep -q "${display['pos_1_lid_state']}" /proc/acpi/button/lid/LID/state; then
  notify-send -u "low" -t 2000 "Considering this position 1"
  sleep 1
  xrandr --output "${display['pos_1_screen_left']:-}"   --mode 2560x1440 --crtc 0 --pos 0x2160 --rotate normal \
         --output "${display['pos_1_screen_middle']:-}" --mode 3840x2160 --crtc 1 --pos 2560x0 --rotate normal

elif [ -n "${display['pos_2_screen_left']:-}" ] &&
     [ -n "${display['pos_2_screen_middle']:-}" ] &&
     grep -q "${display['pos_2_lid_state']}" /proc/acpi/button/lid/LID/state; then
  notify-send -u "low" -t 2000 "Considering this position 2"
  sleep 1
  xrandr --output "${display['pos_2_screen_left']:-}"   --off \
         --output "${display['pos_2_screen_middle']:-}" --mode 3840x2160 --crtc 0 --pos 0x0 --rotate normal

elif [ -n "${display['pos_0_screen_0']:-}" ]; then
  notify-send -u "low" -t 2000 "Considering this position 0"
  xrandr --output "${display['pos_0_screen_0']}" --auto --crtc 0 --pos 0x0 --rotate normal
else
  notify-send -u "critical" -t 10000 "No display configuration needed" "Hence, nothing configured"
fi

if [ -n "$disconnected_but_used_displays" ]; then
  cmd='xrandr '
  for display in $disconnected_but_used_displays; do
    cmd="${cmd}--output $display --off "
  done
  notify-send -u "low" -t 2000 "Will run: \`$cmd\` now..."
  sleep 2
  eval "$cmd"
fi

convert xc:black /tmp/black.png
feh --bg-fill /tmp/black.png
rm /tmp/black.png


#feh --bg-fill /tmp/background.png
#xrandr --output eDP-1   --mode 1920x1080 --right-of DP-3
